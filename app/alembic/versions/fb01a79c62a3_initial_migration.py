"""initial migration

Revision ID: fb01a79c62a3
Revises: 
Create Date: 2025-05-23 17:21:58.862697

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fb01a79c62a3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_pre_charges_status'), table_name='pre_charges')
    op.drop_index(op.f('idx_pre_charges_task_id'), table_name='pre_charges')
    op.drop_index(op.f('idx_pre_charges_user_id'), table_name='pre_charges')
    op.drop_table('pre_charges')
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.alter_column('orders', 'order_number',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.alter_column('orders', 'product_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               nullable=True)
    op.alter_column('orders', 'amount',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('orders', 'currency',
               existing_type=sa.VARCHAR(length=3),
               type_=sa.String(length=10),
               nullable=True)
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('pending', 'paid', 'failed', 'expired', 'refunded', name='order_status'),
               nullable=True,
               existing_server_default=sa.text("'pending'::order_status"))
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('orders', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('orders', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('orders', 'original_amount',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.drop_index(op.f('idx_orders_number'), table_name='orders')
    op.drop_index(op.f('idx_orders_status'), table_name='orders')
    op.drop_index(op.f('idx_orders_user'), table_name='orders')
    op.drop_constraint(op.f('orders_order_number_key'), 'orders', type_='unique')
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_order_number'), 'orders', ['order_number'], unique=True)
    op.alter_column('payment_history', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('payment_history', 'amount',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('payment_history', 'currency',
               existing_type=sa.VARCHAR(length=3),
               type_=sa.String(length=10),
               nullable=True)
    op.alter_column('payment_history', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('payment_history', 'payment_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('payment_history', 'transaction_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('payment_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_payment_history_event'), table_name='payment_history')
    op.drop_index(op.f('idx_payment_history_order'), table_name='payment_history')
    op.drop_index(op.f('idx_payment_history_transaction'), table_name='payment_history')
    op.create_index(op.f('ix_payment_history_id'), 'payment_history', ['id'], unique=False)
    op.drop_column('payment_history', 'event_id')
    op.drop_index(op.f('idx_transactions_account'), table_name='transactions')
    op.drop_index(op.f('idx_transactions_time'), table_name='transactions')
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.create_index(op.f('idx_transactions_time'), 'transactions', ['created_at'], unique=False)
    op.create_index(op.f('idx_transactions_account'), 'transactions', ['account_id'], unique=False)
    op.add_column('payment_history', sa.Column('event_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_payment_history_id'), table_name='payment_history')
    op.create_index(op.f('idx_payment_history_transaction'), 'payment_history', ['transaction_id'], unique=False)
    op.create_index(op.f('idx_payment_history_order'), 'payment_history', ['order_id'], unique=False)
    op.create_index(op.f('idx_payment_history_event'), 'payment_history', ['event_id'], unique=False)
    op.alter_column('payment_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('payment_history', 'transaction_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('payment_history', 'payment_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('payment_history', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('payment_history', 'currency',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=3),
               nullable=False)
    op.alter_column('payment_history', 'amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=15, scale=2),
               nullable=False)
    op.alter_column('payment_history', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_orders_order_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.create_unique_constraint(op.f('orders_order_number_key'), 'orders', ['order_number'])
    op.create_index(op.f('idx_orders_user'), 'orders', ['user_id'], unique=False)
    op.create_index(op.f('idx_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('idx_orders_number'), 'orders', ['order_number'], unique=False)
    op.alter_column('orders', 'original_amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('orders', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('orders', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('pending', 'paid', 'failed', 'expired', 'refunded', name='order_status'),
               nullable=False,
               existing_server_default=sa.text("'pending'::order_status"))
    op.alter_column('orders', 'currency',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=3),
               nullable=False)
    op.alter_column('orders', 'amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=15, scale=2),
               nullable=False)
    op.alter_column('orders', 'product_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('orders', 'order_number',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.create_table('pre_charges',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('refunded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['accounts.user_id'], name=op.f('pre_charges_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pre_charges_pkey')),
    sa.UniqueConstraint('task_id', name=op.f('pre_charges_task_id_key'))
    )
    op.create_index(op.f('idx_pre_charges_user_id'), 'pre_charges', ['user_id'], unique=False)
    op.create_index(op.f('idx_pre_charges_task_id'), 'pre_charges', ['task_id'], unique=False)
    op.create_index(op.f('idx_pre_charges_status'), 'pre_charges', ['status'], unique=False)
    # ### end Alembic commands ###
